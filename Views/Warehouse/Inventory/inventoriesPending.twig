{% block body %}
<section>
    <div id="inventories_pending-module">

        <div class="header-buttons">
            <el-row :gutter="8">
            </el-row>
        </div>


        <div class="panel-content" style="top:32px;">
            <vue-dynamic-table-rbc
                table-id="inventoriesPendingTable"
                box-classes="box box-primary full-height"
                class-name="table table-bordered table-hover table-centered"

                :remote-method="remoteSearch"

                :loading-from-server="inventoriesPendingResponse.loading"
                :loading-error="inventoriesPendingResponse.error"

                :data-model="inventoriesPendingResponse.data"
                :total-results="inventoriesPendingResponse.totalResults"



                columns-var-name="inventoriesPendingColumns"
                :source-columns="getColumnSettings('inventoriesPendingColumns')"

                @columns-changed="saveColumnsConfig"
                @filters-changed="saveFiltersConfig"
                @expand-row="expandedRow"

                :select-options="selectOptions"
            >
                {% include 'Warehouse/Inventory/templates/countBy-slots.twig' %}


                {# SLOTS #}

                <template slot="warehouseName" scope="row">
                    ${ $store.getters['warehouse/warehouseNameById'](row.object.wh_id) }
                </template>

                <template slot="userName" scope="row">
                    ${ $store.getters.userNameById(row.object.user_id) }
                    {# ${ row.object.wh_id } #}
                </template>

                <template slot="inventory-title-cell" scope="row">
                    ${ row.object.title }
                    {# <div v-if="row.object.comments" class="pull-right">
                        <idp-comments-popover
                            :comments="row.object.comments"
                        ></idp-comments-popover>
                    </div> #}
                </template>

                <template slot="count-date" scope="row">
                    <idp-formated-date
                        :date="row.object.count_date"
                        :options="{hours:false}"
                    >
                    </idp-formated-date>
                </template>

                <template slot="recurrent-link" scope="row">
                    <el-tag :type="row.object.recurrent?'success':'gray'">
                        ${ row.object.recurrent?'Recurrente' :'No recurrente' }
                        <span v-if="row.object.recurrent" class="glyphicon glyphicon-ok-circle">
                        </span>
                    </el-tag>
                    <div style="font-size:0.8em;" class="next_count_date" v-if="row.object.recurrent">Sig. 02 feb. 2017</div>
                </template>

                <template slot="userCell-link" scope="row">
                    <div v-if="row.object.deleted_user">
                        <span style="color:red">${ row.object.user_name }</span><br>
                        <span style="color:#888;font-size:0.8em;">El usuario no existe </span>

                        {# <idp-edit-user-popover
                            v-on:save-data="saveChangedUser($event, row)"
                            popover-title="Asignar otro usuario"
                            :data-array="$store.getters.dataForSelect('users').options">
                        </idp-edit-user-popover> #}
                    </div>
                    <div v-else>
                        ${ row.object.user_name }
                    </div>
                </template>

                <template slot="no-rows-found">
                    <span>No se encontraron resultados</span>
                </template>

                <template slot="inventory-status-tag" scope="row">
                    <span class="inventoryStatus" :class="row.object.css_class">${ row.object.inv_status }</span>
                </template>


                <template slot="expanded-row" scope="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        <button
                            :id="'btn_openInventoryNewTab-' + row.object.id"
                            class="btn btn-primary btn-xs pull-right"
                            type="button"
                            data-action="openTab"
                            data-module="warehouse"
                            :data-route="'almacenes/inventarios/pendiente/' + row.object.id">
                            Abrir en otra pestaña
                        </button>
                        <table :id="'invForm_' + row.object.id" class="tg" style="margin: auto; width:100%;">
                            <thead>
                                <td>No.</td>
                                <td>Código de barras</td>
                                <td>SKU</td>
                                <td>Nombre</td>
                                <td>Cantidad</td>
                                <td>Observaciones (opcional)</td>
                            </thead>
                            <tr class="invProd" v-for="prod in row.object.detalles" :id="row.object.id + '_' + prod.product_id">
                                <td>x</td>
                                <td>${ prod.barcode }</td>
                                <td>${ prod.sku }</td>
                                <td>${ prod.name }</td>
                                <td>
                                    <span v-if="prod.count">${ prod.count }</span>
                                    <input v-else class="invProdQty" :value="prod.count" type="text">
                                </td>
                                <td>
                                    <textarea class="invProdComment" name="" id="" cols="30" rows="2">${ prod.comments }</textarea>
                                </td>
                            </tr>
                        </table>
                        <button class="btn btn-success" @click="editInventory(row.object.id, $event)">Editar</button>
                    </div>
                </template>
                <template slot="formated-date" scope="row">
                    ${ formatedDate(row.object.created_at) }
                </template>
                <template slot="formated-countDate" scope="row">
                    ${ formatedDate(row.object.count_date) }
                </template>
                <template slot="status-tag" scope="row">
                    ${ row.object.inventory_status.name }
                </template>
                <template slot="warehouse" scope="row">
                    <span>${ row.object.warehouse.name }</span>
                </template>

                <template slot="btn-open" scope="row">
                    <button
                        :id="'btn_openInventoryNewTab-' + row.object.id"
                        class="btn btn-primary btn-xs pull-right"
                        type="button"
                        data-action="openTab"
                        data-module="warehouse"
                        :data-route="'almacenes/inventarios/pendiente/' + row.object.id">
                        Abrir
                    </button>
                </template>
            </vue-dynamic-table-rbc>
        </div>


    </div>
</section>
{% endblock %}
{% block loadScripts %}
    <script id="scriptContainer" type="text/javascript">
        moment().locale('es');
        init.length = 0;
        init = [ {
            title: 'Conteos físicos pendientes',
            file: 'Warehouse/Inventories/inventoriesPending.js',
            functions: [ {
                name: 'inventoriesPendingInit',
                args: [ ]
            } ]
        } ];
    </script>
{% endblock %}
