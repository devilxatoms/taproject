{% block body %}
<section>
    <div id="inventoriesHistory-module">
    	<div class="col-md-12 panel panel-default">
    	    <div class="col-md-7">

                <div class="form-group">
                    <label for="inventory">Usuarios</label>
                    {# SELECTIZE Usuarios #}
                    <vue-selectize-js
                        ref="users"
                        v-bind:selectize-type="userSelectize.type"
                        v-bind:selectize-settings="userSelectize.settings"
                        v-bind:selectize-options="usersVuex.options"
                        v-bind:selectize-enabled="userSelectize.enabled"
                        v-model="users">
                    </vue-selectize-js>

                </div>

                <div class="form-group">
                    <label for="inventory">Almacenes</label>
                    {# SELECTIZE ALMACENES #}
                    <vue-selectize-js
                        ref="warehouses"
                        v-bind:selectize-type="warehouseSelectize.type"
                        v-bind:selectize-settings="warehouseSelectize.settings"
                        v-bind:selectize-options="warehousesFromStore.options"
                        v-bind:selectize-enabled="warehouseSelectize.enabled"
                        v-model="warehouses">
                    </vue-selectize-js>
                </div>

    	        <div class="col-xs-12">
    	            <label>Estatus</label>
    	            {% for status in inventoryStatus %}
	                    | <input name="backorder-status" type="checkbox" v-model="inventoryStatus" value="{{ status.id }}" id="backorder-status-{{ status.id }}">
	                    <label class="filter-option" for="backorder-status-{{ status.id }}">{{ status.name }}</label>
	                {% endfor %}
    	        </div>
    	    </div>

    	    <div class="col-md-3">
    	        <label>Periodo</label>
    	        <div class="form-group">
    	            <label for="from-date" style="font-weight:normal">Desde:</label>
    	            <div class="input-group">
    	                <input id="from-date" type="text" class="datepicker form-control" v-on:change="changeDate($event)">
    	                <div class="input-group-addon">
    	                    <span class="glyphicon glyphicon-calendar"></span>
    	                </div>
    	            </div>
    	        </div>
    	        <div class="form-group">
    	            <label for="to-date" style="font-weight:normal">Hasta:</label>
    	            <div class="input-group">
    	                <input id="to-date" type="text" class="datepicker form-control" v-on:change="changeDate($event)">
    	                <div class="input-group-addon">
    	                    <span class="glyphicon glyphicon-calendar"></span>
    	                </div>
    	            </div>
    	        </div>
    	    </div>

            <div class="col-xs-2" style="border-left:1px solid #DDD">
                {% include 'warehouse/Inventory/inventories_topButtons.twig' with {actual: 'historial'} %}
            </div>


    	</div>

    	<vue-dynamic-table
    		class-name="table table-bordered table-hover"
            v-bind:pagination-options="inventoryTablePageOptions"
            sort-indicator-asc-class="fa fa-caret-down"
            sort-indicator-desc-class="fa fa-caret-up"
    		v-bind:filter-enabled="true"
    		v-bind:expandable-row="true"
    	    v-bind:columns="defaultColumnsVuex.inventoriesPending"
    	    v-bind:data-model="inventoriesList"
    	    v-on:expand-row="testExpandEvent($event)">

            <template slot="recurrent" scope="row">
                <span :class="'glyphicon glyphicon-' + (row.object.recurrent?'ok':'remove') + '-circle'">
                </span>
            </template>

    	    <template slot="no-rows-found">
    	    	<span>No se encontraron resultados</span>
    	    </template>

            <template slot="inventory-status-tag" scope="row">
                <span class="inventoryStatus" :class="row.object.css_class">${ row.object.inv_status }</span>
            </template>

    	    <template slot="expanded-row" scope="row">
    	    	<div style="padding:16px">
    	    		<table :id="'invForm_' + row.object.id" class="tg" style="margin: auto">
    	    			<thead>
                            <td>No.</td>
                            <td>CÃ³digo de barras</td>
    	    				<td>SKU</td>
    	    				<td>Producto</td>
    	    				<td>Cantidad</td>
    	    				<td>Observaciones (opcional)</td>
    	    			</thead>

    	    			<tr class="invProd" v-for="prod in row.object.detalles" :id="row.object.id + '_' + prod.product_id">
                            <td>x</td>
                            <td>${ prod.barcode }</td>
    	    				<td>${ prod.sku }</td>
    	    				<td>${ prod.name }</td>
    	    				<td>
    	    					<span>${ prod.count }</span>
    	    				</td>
    	    				<td>
    	    					<span>${ prod.comments }</span>
    	    				</td>
    	    			</tr>
    	    		</table>
    	    	</div>
    	    </template>

    	    <template slot="formated-date" scope="row">
    	    	${ formatedDate(row.object.created_at) }
    	    </template>

            <template slot="formated-countDate" scope="row">
                ${ formatedDate(row.object.count_date) }
            </template>

    	    <template slot="status-tag" scope="row">
    	    	${ row.object.inventory_status.name }
    	    </template>

    	    <template slot="warehouse" scope="row">
    	    	<span>${ row.object.warehouse.name }</span>
    	    </template>
    	</vue-dynamic-table>

    </div>
</section>
{% endblock %}
{% block loadScripts %}
    <script id="scriptContainer" type="text/javascript">
        moment().locale('es');
        init.length = 0;
        init = [ {
            title: 'Historial de Inventarios',
            file: 'Warehouse/Inventories/inventoriesHistory.js',
            functions: [ {
                name: 'inventoriesHistoryInit',
                args: []
            } ]
        } ];
        // initModule( inventoriesHistoryRequired );
    </script>
{% endblock %}
