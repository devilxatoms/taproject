{% block body %}
<div class="header-buttons">
   <div class="btn-group main-buttons">
       <a name="add" role="button" class="btn btn-success" data-action="openLateral" data-panelsize="md"@click="getAssigned" data-module="usuarios" data-route="usuarios/registro">
         <i class="fa fa-plus-square" aria-hidden="true"></i>
         Asignar Facultades
       </a>
   </div>
</div>
<div id="userFacultyAssign" class="panel-content faculty-assign-control">
  <div class="col-md-3">
    <h4><i class="fa fa-user" aria-hidden="true"></i> Usuarios</h4>
    <el-tree
     :data="users"
     show-checkbox
     node-key="id"
     ref="refUsers"
     :props="defaultProps">
    </el-tree>
  </div>
  <div class="col-md-3">
   <h4><i class="fa fa-cubes" aria-hidden="true"></i> MÃ³dulos
    <button type="button" @click="getFaculty" name="button" class="btn-primary">
            <i class="fa fa-arrow-right" aria-hidden="true"></i>
        </button></h4>
   <el-tree
    :data="modules"
    node-key="id"
    show-checkbox
    ref="refModules"
    :props="defaultProps">
   </el-tree>
  </div>
  <div class="col-md-3">
    <h4><i class="fa fa-list" aria-hidden="true"></i> Facultades
      <button type="button" @click="getAssigned" name="button" class="btn-primary">
        <i class="fa fa-arrow-right" aria-hidden="true"></i></button></h4>
    <el-tree
    :data="faculty"
    node-key="id"
    show-checkbox
    ref="refFaculty"
    :props="defaultProps">
   </el-tree>
  </div>
  <div class="col-md-3">
    <h4><i class="fa fa-info-circle" aria-hidden="true"></i> Asignados</h4>
     <el-tree
    :data="Assigned"
    node-key="id"
    show-checkbox
    ref="refAssigened"
    :props="defaultProps">
   </el-tree>
  </div>
</div>
{% endblock %}
{% block loadScripts %}
<script id="scriptContainer" type="text/javascript">
init.length = 0;
init = [{
  title: 'Facultades Por Usuario'
}];

var companyid = {{session.userData.company}}

var userFaculties = new Vue({
  el: '#userFacultyAssign',
  data: {
       modules: [],
       users: [],
       faculty:[],
       defaultProps: {
         children: 'children',
         label: 'label'
       }
   },
   mounted: function() {
       this.loadModuleList();
       this.loadUserList();
   },
   methods: {
     loadModuleList: function(){
       $.ajax({
           url: AJAX_PATH + 'dashboard/faculty/moduleList',
           data:{
             id: companyid
           },
           type: 'POST'
       }).done( function( response ) {
         console.log(response.data);
         this.modules = response.data;
       }.bind(this));
     },
     loadUserList: function(){
       $.ajax({
           url: AJAX_PATH + 'dashboard/faculty/userList',
           data:{
             id: companyid
           },
           type: 'POST'
       }).done( function( response ){
         this.users = response.data;
         console.log(this.users);
       }.bind(this));
     },
     getFaculty: function(){
        this.moduleNodes = this.$refs.refModules.getCheckedNodes(true);
        
        console.log(this.moduleNodes);


        $.ajax({
            url: AJAX_PATH+'dashboard/faculty/getFacultiesByPageId',
            data:{
              pages: this.moduleNodes
            },
            type: 'POST'
        }).done( function( response ){
            console.log(response.data);
            this.faculty = response.data;
        }.bind(this));
    
   },
   getAssigned: function(){
        this.moduleFaculties = this.$refs.refFaculty.getCheckedNodes(true);
        this.moduleUser = this.$refs.refUsers.getCheckedNodes(true);
        
        console.log(this.moduleFaculties);
        console.log(this.moduleUser);


        $.ajax({
            url: AJAX_PATH+'dashboard/faculty/getJsonByUser',
            data:{
              pages: this.moduleFaculties,
              user: this.moduleUser
            },
            type: 'POST'
        }).done( function( response ){
            console.log(response.data);
            this.Assigned = response.data;
        }.bind(this));
    }
   }
});
</script>
{% endblock %}
