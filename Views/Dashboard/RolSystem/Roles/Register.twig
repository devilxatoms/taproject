{% block body %}
<section id="register-rol-formd">
  <div class="header-buttons">
    <div class="btn-group main-buttons">
      <button 
        type="button" 
        name="registerbtn" 
        class="btn btn-primary" 
        v-on:click="registerRolBtn">
        Registrar
      </button>
    </div>
  </div>
  <div class="panel-content">
    <div class="box box-primary fullHeight">
      <div class="box-container">
          <div class="box-title">
            <h4> Registro de Roles</h4>
          </div>
        <form >
          <!-- <h5 class="box-title">Datos para Autenticación</h5> -->
          <div class="form-group">
            <label for="roluser">Rol:</label>
            <input v-validate="'required'" type="text" class="form-control" id="rf-rol" placeholder="Introducir Rol" name="roluser">
            <span class="cRed" v-show="errors.has('roluser')">Ingresa nombre del Rol</span>
          </div>
          <div class="form-group">
            <label for="description">Descripción:</label>
            <textarea class="form-control" id="rf-desc" placeholder="Introducir Descripción" name="description"></textarea>
          </div>
        </form>
      </div>
    </div> 
  </div>
</section>
{% endblock %}
{% block loadScripts %}
 <script id="scriptContainer" type="text/javascript">
 var registerRolForm = new Vue({
   el: '#register-rol-formd',
   data: {

   },
   mounted: function() {
   },
   methods: {
     registerRolBtn: function(){
       this.$validator.validateAll().then(() => {
         var rolData = $('#register-rol-formd input, #register-rol-formd textarea').serializeArray();
         var jsonRolData = {};
         $.each(rolData, function(i, item) {
             jsonRolData[item.name] = item.value;
         });

         $.ajax({
             url: AJAX_PATH + 'dashboard/rol/register',
             data: jsonRolData,
             type: 'POST'
         }).done( function( response ) {

           switch (response.data[0].status) {
             case 0:
             this.$message({
                       message: 'El Rol no puede ser registrado debido a que existe un registro previo con el mismo nombre.',
                       type: 'warning'
                   });
               break;
            case 1:
            this.$message({
                      message: 'Registro exitoso.',
                      type: 'success'
                  });
            rolesTable.loadRoles();
                 break;
             default:
             this.$message({
                       message: 'El Rol no puede ser registrado.',
                       type: 'warning'
                   });
               break;
           }
         }.bind( this ));
      }).catch(( ) => {
        this.$message({
                  message: 'Completa el formulario como se indica.',
                  type: 'warning'
              });
      });


     }
   },
   computed: {
   },
   watch: {
   },
   delimiters: ['${', '}']
 });
 </script>
{% endblock %}
