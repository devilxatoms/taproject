<html lang="es">
  <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1">
            <title>TuAdmin - Login</title>
      <link href="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/font-awesome.min.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/pnotify/pnotify.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/pnotify/pnotify.brighttheme.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/pnotify/pnotify.buttons.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/pnotify/pnotify.mobile.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/pnotify/pnotify.history.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/login.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/skins.css') }}">
      <link rel="stylesheet" type="text/css" href="{{ url('public/css/ui.v2.css') }}">
      <!-- <link rel="stylesheet" type="text/css" href="{{ url('public/css/loginStyles.min.css') }}"> -->
      <!-- <link rel="stylesheet" href="{{ url('public/css/vue-components/element-ui.css') }}"> -->
  </head>
  <body class="align bg-img">
    <div class="container_form">
      <div class="grid">
        <form id="loginCustomers" class="form login">
          <div class="logo_form" >
            <img src="public/img/logo_ta.svg" alt="TuAdmin">
          </div>

          <div class="form-group">
            <div class="form_box">
              <i class="box_rfc"></i>
              <input id="login_rfc" type="text" name="rfc" :class="{'border': errors.has('rfc')}" v-model="rfc" v-validate="'required'" autocomplete="on" placeholder="RFC">
            </div>
            <div class="form_error" v-show="errors.has('rfc')">
              <span class="cRed"><i class="fa fa-exclamation-triangle" style="color:inherit; z-index:1; margin-right:5px;"></i>RFC Obligatorio</span>
            </div>
          </div>

          <div class="form-group">
              <div class="form_box">
                  <i class="box_usr"></i>
                  <input id="login_username" type="text" name="user" :class="{'border': errors.has('user')}" v-model="user" v-validate="'required'" autocomplete="on" placeholder="Usuario">
              </div>
              <div class="form_error" v-show="errors.has('user')">
                  <span class="cRed"><i class="fa fa-exclamation-triangle" style="color:inherit; z-index:1; margin-right:5px;"></i>Usuario Obligatorio</span>
              </div>
          </div>

          <div class="form-group">
              <div class="form_box">
                  <i class="box_pass"></i>
                  <input id="login_password" type="password" name="pass" :class="{'border': errors.has('pass')}" v-model="pass" v-validate="'required'" autocomplete="on" placeholder="Contraseña">
              </div>
              <div class="form_error" v-show="errors.has('pass')">
                  <span class="cRed"><i class="fa fa-exclamation-triangle" style="color:inherit; z-index:1; margin-right:5px;"></i>Contraseña Obligatoria</span>
              </div>
          </div>

          <div class="form-group">
              <input type="checkbox" @change="rememberChange" v-model="rememberMe" :checked="Boolean(rememberMe)">
              <span>Recuerdame</span>
          </div>

          <div class="form-group">
              <button type="button" v-on:click="login">Login</button>
          </div>

          <p class="text--center">No Estas Registrado? <a href="#" >Registrate Aqui!</a></p>
        </form>

        <div class="loaderUXBars">
            <img src="{{ url('public/img/svgLoaders/bars.svg') }}" width="40">
        </div>
      <!-- <div class="welcomeText"></div> -->
      <form id="firstPass" class="form login">
        <div class="logo_form">
          <img src="public/img/logo_ta.svg" alt="TuAdmin">
        </div>

        <div class="form-group">
          <div class="form_box">
            <i class="box_pass"></i>
            <input id="contraseña" type="password" name="contraseña" placeholder="Nueva Contraseña" :class="{'border': errors.has('contraseña')}" v-model="npass" v-validate="'required'" data-vv-as="Contraseña" float-label="Contraseña">
          </div>
          <div v-if="errors.has('contraseña')" class="form_error">
              <span class="cRed"><i class="fa fa-exclamation-triangle" style="color:inherit; z-index:1; margin-right:5px;"></i>${ errors.first('contraseña') }</span>
           </div>
        </div>

        <div class="form-group">
          <div class="form_box">
            <i class="box_pass"></i>
            <input id="confirm_password" type="password" name="confirm_password" :class="{'border': errors.has('confirm_password')}" placeholder="Repetir Contraseña" v-model="rpass" v-validate="'required|confirmed:contraseña'" data-vv-as="Repetir Contraseña" float-label="Repetir Contraseña">
          </div>
          <div v-if="errors.has('confirm_password')" class="form_error">
             <span class="cRed"><i class="fa fa-exclamation-triangle" style="color:inherit; z-index:1; margin-right:5px;"></i>${ errors.first('confirm_password') }</span>
           </div>
        </div>

        <div class="form-group">
          <button type="button" v-on:click="firstUpdate">Cambiar Contraseña</button>
        </div>

      </form>

     </div>

    </div>
    {% block loadScripts %}
    <!-- <script type="text/javascript" src="{{ url('public/js/loginScripts.min.js') }}"></script> -->
    <script type="text/javascript" src="{{ url('public/js/jquery-3.1.1.min.js') }}"></script>
    <script type="text/javascript" src="{{ url('public/js/plugins/vue.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/vee-validate.min.js') }}"></script>
    <!-- <script defer type="text/javascript" src="{{ url('public/js/plugins/element-ui@1.4.2.js') }}"></script> -->
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.animate.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.buttons.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.confirm.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.nonblock.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.mobile.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.desktop.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.history.js') }}"></script>
    <script defer type="text/javascript" src="{{ url('public/js/plugins/pnotify/pnotify.callbacks.js') }}"></script>
    <script type="text/javascript">
    var loginForm;
    var AJAX_PATH = '{{ url('/ajax/') }}';
    var WEB_PATH = '{{ url('/') }}';
    function initVeeValidate() {
        Vue.use( VeeValidate, {
            locale: 'es',
            dictionary: {
                es: {
                    messages: {
                        after: ( field, [ target ] ) => `El campo ${field} debe ser posterior a ${target}.`,
                        alpha_dash: ( field ) => `El campo ${field} solo debe contener letras, números y guiones.`,
                        alpha_num: ( field ) => `El campo ${field} solo debe contener letras y números.`,
                        alpha: ( field ) => `El campo ${field} solo debe contener letras.`,
                        before: ( field, [ target ] ) => `El campo ${field} debe ser anterior a ${target}.`,
                        between: ( field, [ min, max ] ) => `El campo ${field} debe estar entre ${min} y ${max}.`,
                        confirmed: ( field, [ confirmedField ] ) => `El campo ${field} no coincide con ${confirmedField}.`,
                        date_between: ( field, [ min, max ] ) => `El campo ${field} debe estar entre ${min} y ${max}.`,
                        date_format: ( field, [ format ] ) => `El campo ${field} debe tener formato formato ${format}.`,
                        decimal: ( field, [ decimals ] = [ '*' ] ) => `El campo ${field} debe ser númerico y contener ${decimals === '*' ? '' : decimals} puntos decimales.`,
                        digits: ( field, [ length ] ) => `El campo ${field} debe ser númerico y contener exactamente ${length} dígitos.`,
                        dimensions: ( field, [ width, height ] ) => `El campo ${field} debe ser de ${width} pixeles por ${height} pixeles.`,
                        email: ( field ) => `El campo ${field} debe ser un correo electrónico válido.`,
                        ext: ( field ) => `El campo ${field} debe ser un archivo válido.`,
                        image: ( field ) => `El campo ${field} debe ser una imagen.`,
                        in: ( field ) => `El campo ${field} debe ser un valor válido.`,
                        ip: ( field ) => `El campo ${field} debe ser una dirección ip válida.`,
                        max: ( field, [ length ] ) => `El campo ${field} no debe ser mayor a ${length} caracteres.`,
                        max_value: ( field, [ length ] ) => `El campo ${field} debe ser menor o igual a ${length}.`,
                        mimes: ( field ) => `El campo ${field} debe ser un tipo de archivo válido.`,
                        min: ( field, [ length ] ) => `El campo ${field} debe tener al menos ${length} caracteres.`,
                        min_value: ( field, [ length ] ) => `El campo ${field} debe ser mayor o igual a ${length}.`,
                        not_in: ( field ) => `El campo ${field} debe ser un valor válido.`,
                        numeric: ( field ) => `El campo ${field} debe contener solo caracteres númericos.`,
                        regex: ( field ) => `El formato del campo ${field} no es válido.`,
                        required: ( field ) => `El campo ${field} es obligatorio.`,
                        size: ( field, [ size ] ) => `El campo ${field} debe ser menor a ${size} KB.`,
                        url: ( field ) => `El campo ${field} no es una URL válida.`
                    }
                }
            }
        } ); // good to go.

    }
    $( document ).ready( function () {
          initVeeValidate();
          var CDN_PATH = 'https://cdn.tuadmin.com/';
          loginForm = new Vue({
              el: "#loginCustomers",
              data:{
                rfc:"",
                user:"",
                pass: "",
                rememberMe: false
              },
              mounted: function(){
                this.rfc = (localStorage["companyUserRFC"] !== undefined)? localStorage["companyUserRFC"] : "";
                this.user = (localStorage["companyUserNickname"] !== undefined)? localStorage["companyUserNickname"] : "";
                this.pass = (localStorage["companyUserPass"] !== undefined)? localStorage["companyUserPass"] : "" ;
                this.rememberMe = Boolean(localStorage["rememberMe"] == 'true');
              },
              methods: {
                login: function(){
                  loginForm.$validator.validateAll( ).then(( ) => {
                    $.ajax({
                        data: {
                          rfc: loginForm.rfc,
                          user: loginForm.user,
                          pass: loginForm.pass,
                        },
                        url: AJAX_PATH + 'login',
                        type: 'POST'
                    }).done(function(response) {
                      switch (response.data[0].status) {
                        case 0:

                        //   loginForm.$message({
                        //     message: 'Alguno de los datos proporcionados es incorrecto o no existe el usuario.',
                        //     type: 'warining'
                        //   });
                          new PNotify({
                              title: 'Error! No se pudo Iniciar Sesion',
                              text: 'Alguno de los datos proporcionados es incorrecto o no existe el usuario',
                              type: 'error',
                              icon: 'ui-icon ui-icon-flag'
                          });
                          break;
                        case 1:
                          new PNotify({
                              title: 'Exito',
                              text: 'Usuario Logeado Correctamente',
                              type: 'success',
                              icon: 'ui-icon ui-icon-flag'
                          });

                          //local storage
                          if(localStorage["rememberMe"] == 'true'){
                              localStorage["companyUserRFC"] = document.getElementById('login_rfc').value;
                              localStorage["companyUserNickname"] = document.getElementById('login_username').value;
                              localStorage["companyUserPass"] = document.getElementById('login_password').value
                          }else{
                              localStorage.removeItem('companyUserRFC');
                              localStorage.removeItem('companyUserNickname');
                              localStorage.removeItem('companyUserPass');
                          }



                          $('#loginCustomers').slideToggle();
                          $('.loaderUXBars').slideToggle().delay( 500 ).slideToggle(250);

                        //   setTimeout(function(){
                        //     $('.welcomeText').append('<h1>\
                        //       <span>B</span>\
                        //       <span>I</span>\
                        //       <span>E</span>\
                        //       <span>N</span>\
                        //       <span>V</span>\
                        //       <span>E</span>\
                        //       <span>N</span>\
                        //       <span>I</span>\
                        //       <span>D</span>\
                        //       <span>O</span>\
                        //     </h1><br>\
                        //     <div id="usrPicture">\
                        //       <img src="'+CDN_PATH+response.data[0].picture+'" width="60px"alt=""><br>\
                        //     </div>\
                        //     <h2>'+response.data[0].name+' '+response.data[0].lastname+'</h2>');
                        // },1000);

                        //   setTimeout(function(){
                        //     $('.welcomeText #usrPicture').slideToggle('slow');
                        //     $('.welcomeText h2').slideToggle('slow');
                        // },400);

                        setTimeout(function(){
                            $('body').fadeOut(250, function(){
                                location.replace(WEB_PATH);
                            });
                        },1000);

                          break;
                        case 2:
                            // loginForm.$message({
                            //   message: 'Es necesario crear una contraseña nueva para este usuario.',
                            //   type: 'success'
                            // });
                              new PNotify({
                                  title: 'Primer Logueo Exitoso',
                                  text: 'Es necesario crear una contraseña nueva para este usuario',
                                  type: 'success',
                                  icon: 'ui-icon ui-icon-flag'
                              });
                          $('#loginCustomers').slideToggle();
                          $('.loaderUXBars').slideToggle().delay( 1000 ).slideToggle(500);
                          $('#firstPass').delay(1000).slideToggle();
                          $.ajax({
                            method:'POST',
                            url:'/app/Controllers/UsersController.php',
                            data:loginForm.rfc
                          })

                          break;
                        case 3:
                        // loginForm.$message({
                        //   message: 'Usuario Bloqueado.',
                        //   type: 'warning'
                        // });
                        new PNotify({
                              title: 'Usuario Bloqueado',
                              text: 'Es necesario comunicarse con su Administrador',
                              type: 'error',
                              icon: 'ui-icon ui-icon-flag'
                          });
                        break;
                        default:

                      }
                    });

                  }).catch(( ) => {
                    //   loginForm.$message({
                    //     message: 'Completar Formulario Como Se Indica.',
                    //     type: 'warning'
                    //   });
                    new PNotify({
                        title: 'Error',
                        text: 'Completar Formulario Como Se Indica',
                        type: 'error',
                        icon: 'ui-icon ui-icon-flag'
                    });
                  });
                },
                rememberChange: function(){
                    localStorage["rememberMe"] = loginForm.rememberMe;
                }
              },
              delimiters: [ '${', '}' ]
            });

            var firstUpdate = new Vue({
                el: "#firstPass",
                data:{
                  npass: "",
                  rpass: ""
                },
                methods: {
                  firstUpdate: function(){
                    loginForm.$validator.validateAll( ).then(( ) => {
                      $.ajax({
                          data: {
                            pass: firstUpdate.npass,
                            cpass: firstUpdate.rpass,
                          },
                          url: AJAX_PATH + 'updateUserPass',
                          type: 'POST'
                      }).done(function(response) {
                        if (response.data[0].status == 1) {
                            window.location.replace(WEB_PATH);
                        }
                      });

                    }).catch(( ) => {
                        // firstUpdate.$message({
                        //   message: 'Completar Formulario Como Se Indica.',
                        //   type: 'warning'
                        // });
                      new PNotify({
                          title: 'Error',
                          text: 'Completar Formulario Como Se Indica',
                          type: 'error',
                          icon: 'ui-icon ui-icon-flag'
                      });
                    });
                  }
                },
                delimiters: [ '${', '}' ]
              });
    });

    </script>
    {% endblock %}
  </body>
</html>
