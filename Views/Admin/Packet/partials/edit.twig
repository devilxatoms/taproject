{% block content %}
    <section>
        <style>
            #containerAdditionalTag {
                height: 242px;
                overflow: auto;
            }

        </style>
        <div class="row" id="addPacketSide">
            <!-- %CONTENT% -->
            <!-- basic product data -->
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Datos Paquete</h3>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <form id="PacketForm">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="">Paquete:</label>
                                        <input
                                            type="hidden"
                                            class="form-control"
                                            v-validate="'required'"
                                            name="id"
                                            v-model="pktid">
                                        <input
                                            type="text"
                                            class="form-control"
                                            v-validate="'required'"
                                            name="nombre"
                                            placeholder="Paquete"
                                            v-model="pktname">
                                        <span class="cRed" v-show="errors.has('nombre')">Campo Nombre Es Obligatorio</span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="">Usuarios:</label>
                                        <input
                                            type="number"
                                            min="0"
                                            v-validate="'required'"
                                            class="form-control"
                                            name="cusuarios"
                                            placeholder="Cantidad de Usuarios"
                                            v-model="pktusrs">
                                            <input type="checkbox" :checked="pktusrs == 0" v-model="unlimitedUsers">
                                            <template>
                                                <span v-if="pktusrs == 0" class="cGreen">Ilimitados</span>
                                                <span v-else class="cBlue">Llimitados</span>
                                            </template>
                                        <span class="cRed" v-show="errors.has('cusuarios')">Ingresa una cantidad de usuarios</span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="">Timbres:</label>
                                        <input
                                            type="number"
                                            v-validate="'required'"
                                            min="-1"
                                            class="form-control"
                                            name="ctimbres"
                                            placeholder="Cantidad de Timbres"
                                            v-model="pkttim">
                                            <input type="checkbox" :checked="pkttim == -1" v-model="unlimitedStamps">
                                            <template>
                                                <span v-if="pkttim == -1" class="cGreen">Ilimitados</span>
                                                <span v-else class="cBlue">Llimitados</span>
                                            </template>
                                        <span class="cRed" v-show="errors.has('ctimbres')">Ingresa una cantidad de timbres</span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="">Descripcion:</label>
                                        <textarea name="descripcion" v-model="pktdesc"></textarea>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="">E-mails:</label>
                                        <input
                                            type="number"
                                            v-validate="'required'"
                                            min="-1"
                                            class="form-control"
                                            name="cemails"
                                            placeholder="Cantidad de E-mails"
                                            v-model="pktmails">
                                            <input type="checkbox" :checked="pktmails == -1" v-model="unlimitedEmails">
                                            <template>
                                                <span v-if="pktmails == -1" class="cGreen">Ilimitados</span>
                                                <span v-else class="cBlue">Llimitados</span>
                                            </template>
                                        <span class="cRed" v-show="errors.has('cemails')">Ingresa una cantidad de e-mails</span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="">Costo:</label>
                                        <input
                                            type="number"
                                            class="form-control"
                                            min="0"
                                            name="costs"
                                            placeholder="Costo del Paquete"
                                            v-model="pktprice">
                                            <template v-if="pktprice == 0">
                                                <span class="cGreen">Gratuito</span>
                                            </template>
                                        <span class="cRed" v-show="errors.has('costs')">Ingresa el costo del paquete</span>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <!-- / basic product data -->
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Modulos y Secciones por Paquete</h3>
                    </div>
                    <div class="panel-body">
                        <div id="packetModList" class="col-md-3">
                            <h4>
                                <i class="fa fa-cubes" aria-hidden="true"></i>
                                Modulos</h4>
                            <form>
                                <ul>
                                    <template v-for="modulo in moduleList">
                                        <li v-on:click="checkedBoxes">
                                            <span>
                                                <i class="fa fa-circle" aria-hidden="true"></i>
                                            </span><input type="radio" name="module" v-bind:value="modulo.id">
                                            ${modulo.module}</li>
                                    </template>
                                </ul>
                            </form>

                        </div>
                        <div id="packetPageList" class="col-md-9">
                            <h4>Paginas</h4>
                            <template v-for="page in pageList">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label for="">${page.nombre}</label>
                                        <input type="checkbox" name="" v-bind:value="page.id" v-on:click="addPage">
                                    </div>
                                </div>
                            </template>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <button
                    class="btn btn-primary"
                    type="button"
                    name="button"
                    v-on:click="editPacket">Editar Paquete</button>
                <button class="btn btn-primary" type="button" name="button">Ver Resumen</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <form class="" id="regMod">
                    <div class="form-group">
                        <label for="">Modulo:</label>

                        <input
                            type="text"
                            name="modulename"
                            v-validate="'required'"
                            value=""
                            v-model="module">
                        <span class="cRed" v-show="errors.has('modulename')">Ingresa el Nombre del Modulo</span>

                    </div>
                    <button
                        class="btn btn-success"
                        type="button"
                        name="button"
                        v-on:click="registerModule">Registrar Modulo</button>
                </form>
            </div>
            <div class="col-md-9">
                <form class="" id="regPage">
                    <div class="form-group">

                        <label for="">Pagina:
                        </label>
                        <input type="text" name="pagename" v-validate="'required'" value="">
                        <span class="cRed" v-show="errors.has('pagename')">Ingresa el nombre de la pagina</span>
                        <label for="">
                            Path:</label>
                        <input type="text" name="pagepath" v-validate="'required'" value="">
                        <span class="cRed" v-show="errors.has('pagename')">Ingresa el path de la pagina</span>
                        <label for="">
                            Descripcion:</label>
                        <input type="text" name="pagedesc" value="">

                    </div>

                    <button
                        class="btn btn-success"
                        type="button"
                        name="button"
                        v-on:click="regPageForm">Registrar Pagina</button>
                </form>
            </div>
        </div>
    </section>

    <!-- /%CONTENT% -->
{% endblock %}

{% block loadScripts %}
    <script id="scriptContainer" type="text/javascript">
        var curMod = "";
        var packetEl;
        var regPage;

        $( document ).on( 'click', '#packetModList li', function( ) {

            $( this ).closest( 'ul' ).find( 'li' ).each( function( i, l ) {
                $( this ).removeClass( 'activeModule' );
                $( this ).find( 'span' ).empty( );
                $( this ).find( 'span' ).append( '<i class="fa fa-circle" aria-hidden="true"></i>' );
            });

            $( this ).toggleClass( 'activeModule' );

            $( this ).find( 'input[type=radio]' ).prop( 'checked', true );

            if ($( this ).find( 'input[type=radio]' ).is( ':checked' )) {
                $( this ).find( 'span' ).empty( );
                $( this ).find( 'span' ).append( '<i class="fa fa-check-circle" aria-hidden="true"></i>' );
                curMod = $( this ).find( 'input[type=radio]' ).val( );
            }

        });

        var regModulx = new Vue({
            el: "#regMod",
            data: {
                module: ""
            },
            methods: {
                registerModule: function( ) {
                    this.$validator.validateAll( ).then(( ) => {
                        $.ajax({
                            url: AJAX_PATH + 'admin/packet/modules/add',
                            data: {
                                modulo: this.module
                            },
                            type: 'POST'
                        }).done( function( response ) {
                            console.log( response );
                            packetEl.getModuleList( );
                        }.bind( this ));
                    }).catch(( ) => {
                        new PNotify({ title: 'Error', text: 'Completa el formulario como se indica', type: 'warning', icon: 'ui-icon ui-icon-flag' });
                    });
                }
            }
        });

        regPage = new Vue({
            el: "#regPage",
            methods: {
                regPageForm: function( ) {
                this.$validator.validateAll( ).then(( ) => {
                    var pageData = $( '#regPage' ).serializeArray( );
                    var jsonPageData = {};
                    $.each( pageData, function( i, item ) {
                        jsonPageData[item.name] = item.value;
                    });
                    console.log( jsonPageData );
                    $.ajax({
                        url: AJAX_PATH + 'admin/packet/addpage',
                        data: jsonPageData,
                        type: 'POST'
                    }).done( function( response ) {
                        packetEl.getPageList( );
                        console.log( response );
                    }.bind( this ));
                  }).catch(( ) => {
                      new PNotify({ title: 'Error', text: 'Completa el formulario como se indica', type: 'warning', icon: 'ui-icon ui-icon-flag' });
                  });
                }
            }
        });

        packetEl = new Vue({
            el: "#addPacketSide",
            data: {
                moduleList: [],
                pageList: [],
                buildList: [],
                rmbuildList: [],
                pktid: "",
                pktname: "",
                pktusrs: "",
                pkttim: "",
                pktdesc: "",
                pktmails: "",
                pktprice: "",
                unlimitedUsers: false,
                unlimitedStamps: false,
                unlimitedEmails: false,
            },
            mounted: function( ) {
                this.getModuleList( );
                this.getPageList( );
                this.pktid = editData.data[0].id;
                this.pktname = editData.data[0].name;
                this.pktusrs = editData.data[0].users;
                this.pkttim = editData.data[0].stamps;
                this.pktdesc = editData.data[0].description;
                this.pktmails = editData.data[0].mails;
                this.pktprice = editData.data[0].price;
            },
            watch:{
                    unlimitedUsers: function(checked){
                        this.pktusrs = (checked == true)? 0 : 1;
                    },
                    unlimitedStamps: function(checked){
                        this.pkttim = (checked == true)? -1 : 1;
                    },
                    unlimitedEmails: function(checked){
                        this.pktmails = (checked == true)? -1 : 1;
                    },
                    pktusrs: function(data){
                        this.unlimitedUsers = (data == 0)? true : false;
                    },
                    pkttim: function(data){
                        this.unlimitedStamps = (data == -1)? true : false;
                    },
                    pktmails: function(data){
                        this.unlimitedEmails = (data == -1)? true : false;
                    }
            },
            methods: {
                getModuleList: function( ) {
                    $.ajax({
                        url: AJAX_PATH + 'admin/packet/modules',
                        type: 'POST'
                    }).done( function( response ) {
                        var pages;
                        var buildJSON = [ ];
                        // modify data
                        this.moduleList = response.data;
                        // DOM is not updated yet
                        this.$nextTick( function( ) {
                            // DOM is now updated `this` is bound to the current instance
                            $( '#packetModList li' ).each( function( k, v ) {
                                $.each( editData.data[1], function( key, val ) {
                                    pages = editData.data[1][key ].paginas.split( ',' );
                                    if ( $( v ).find( 'input[type=radio]' ).val( ) == val.module ) {
                                        if ($( v ).trigger( 'click' )) {
                                            // console.log('modulo');   console.log($(v).find('input[type=radio]').val());
                                            // console.log('paginas');   console.log(pages);
                                            $( '#packetPageList .form-group' ).each( function( kcheck, vcheck ) {
                                                // $(vcheck).find('input[type=checkbox]').val()
                                                (pages.includes($( vcheck ).find( 'input[type=checkbox]' ).val( )))
                                                    ? $( vcheck ).find( 'input[type=checkbox]' ).trigger( 'click' )
                                                    : false;
                                            });
                                        }
                                    }
                                });
                            });

                        })
                        $.each( this.moduleList, function( k, i ) {
                            buildJSON[i.id] = {
                                'modulo': i.modulo,
                                'paginas': [ ]
                            };
                        })
                        this.buildList = buildJSON;
                    }.bind( this ));
                    // console.log(this.buildList);
                },
                getPageList: function( ) {
                    $.ajax({
                        url: AJAX_PATH + 'admin/packet/pages',
                        type: 'POST'
                    }).done( function( response ) {
                        this.pageList = response.data;
                    }.bind( this ));
                },
                editPacket: function( e ) {
                    this.$validator.validateAll( ).then( function( ) {

                        var packetData = $( '#PacketForm' ).serializeArray( );
                        var jsonPacketData = {};

                        $.each( packetData, function( i, item ) {
                            jsonPacketData[item.name] = item.value;
                        });

                        jsonPacketData['build'] = packetEl.buildList;
                        console.log( packetEl.rmbuildList );
                        jsonPacketData['remove'] = packetEl.rmbuildList.data;
                        console.log( jsonPacketData );

                        $.ajax({
                            url: AJAX_PATH + 'admin/packet/edit',
                            data: jsonPacketData,
                            type: 'POST'
                        }).done( function( response ) {
                            console.log(response);

                            if (response == 0) {
                            //usersTable.loadUsers();
                            packetEl.$message({
                                message: 'Cambio exitoso.',
                                type: 'success'
                            });
                            adminPacketList.loadPackets();
                            packetEl.getModuleList( );
                          }else{
                            packetEl.$message({
                        message: 'El Paquete No Puede Ser Editado.',
                        type: 'warning'
                    });
                          }
                      }.bind( this ));
                    }).catch(( ) => {
                     packetEl.$message({
                        message: 'El Paquete No Puede Ser Editado.',
                        type: 'warning'
                    });
                    });
                },

                checkedBoxes: function( e ) {
                    $( '#packetPageList input[type=checkbox]' ).prop( 'checked', false );
                    var valMod = $( e.target ).find( 'input[type=radio]' ).val( );
                    var keys = Object.keys( packetEl.buildList[valMod]['paginas' ]);
                    $( '#packetPageList input[type=checkbox]' ).each( function( key, val ) {
                        //CORREGIR (ARREGLO ESTA REACOMODANDO INDICES AL ELIMINAR UN ELEMENTO) - Pruebas
                        $.each( keys, function( kpg, vpg ) {
                            if ( $( val ).val( ) == vpg && packetEl.buildList[valMod]['paginas' ][$( val ).val( )]) {
                                $( val ).prop( 'checked', true );
                            }
                        });

                    });

                },
                addPage: function( e ) {
                    if ($( e.target ).is( ':checked' )) {
                        this.buildList[curMod]['paginas' ][$( e.target ).val( )] = {
                            'status': '1'
                        };
                    } else {
                        this.buildList[curMod]['paginas' ][$( e.target ).val( )] = null;
                        var existsM = 0;
                        if (!Array.isArray(packetEl.rmbuildList['data']))
                            packetEl.rmbuildList['data'] = [ ];
                        if ( packetEl.rmbuildList['data'].length === 0 ) {
                            packetEl.rmbuildList['data'].push({
                                "modulo": curMod,
                                "paginas": [$( e.target ).val( )]
                            });
                        } else {
                            //recorremos arreglo para comporbar si existe el modulo
                            $.each( packetEl.rmbuildList['data'], function( krm, vrm ) {
                                if (packetEl.rmbuildList.hasOwnProperty( 'data' )) {
                                    existsM = ( packetEl.rmbuildList['data'][krm ].modulo == curMod)
                                        ? 1
                                        : 0;
                                }
                                ( existsM === 1 )
                                    ? packetEl.rmbuildList['data'][krm ].paginas.push($( e.target ).val( ))
                                    : false;
                            });
                            ( existsM === 0 )
                                ? packetEl.rmbuildList['data'].push({
                                    "modulo": curMod,
                                    "paginas": [$( e.target ).val( )]
                                })
                                : false;
                        }
                        console.log( packetEl.rmbuildList );
                    }
                }
            },
            delimiters: [ '${', '}' ]
        });
    </script>
{% endblock %}
